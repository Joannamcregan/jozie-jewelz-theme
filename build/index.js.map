{"version":3,"file":"index.js","mappings":";;;;;;;;;;;AAAA,MAAMA,UAAU,CAAC;EACjB;EACIC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,YAAY,GAAGC,QAAQ,CAACC,aAAa,CAAC,4BAA4B,CAAC;IACxE,IAAI,CAACC,WAAW,GAAGF,QAAQ,CAACC,aAAa,CAAC,eAAe,CAAC;IAC1D,IAAI,CAACE,MAAM,EAAE;IACb,IAAI,CAACC,aAAa,GAAG,KAAK;IAC1BC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,YAAY,CAACQ,SAAS,CAAC;EAC5C;EACJ;EACIJ,MAAMA,CAAA,EAAE;IACJ,IAAI,CAACJ,YAAY,CAACS,gBAAgB,CAAC,OAAO,EAAE,MAAM,IAAI,CAACC,aAAa,EAAE,CAAC;IACvEJ,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;EACjC;;EAEJ;EACIG,aAAaA,CAAA,EAAE;IACX,IAAI,IAAI,CAACL,aAAa,EAAE;MACpB,IAAI,CAACF,WAAW,CAACK,SAAS,CAACG,MAAM,CAAC,2BAA2B,CAAC;MAC9DV,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC,CAACM,SAAS,CAACG,MAAM,CAAC,gBAAgB,CAAC;MACjE,IAAI,CAACX,YAAY,CAACQ,SAAS,CAACG,MAAM,CAAC,mBAAmB,CAAC;MACvD,IAAI,CAACN,aAAa,GAAG,KAAK;MAC1BC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IAC1B,CAAC,MAAM;MACH,IAAI,CAACJ,WAAW,CAACK,SAAS,CAACI,GAAG,CAAC,2BAA2B,CAAC;MAC3DX,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC,CAACM,SAAS,CAACI,GAAG,CAAC,gBAAgB,CAAC;MAC9D,IAAI,CAACZ,YAAY,CAACQ,SAAS,CAACI,GAAG,CAAC,mBAAmB,CAAC;MACpD,IAAI,CAACP,aAAa,GAAG,IAAI;MACzBC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IAC1B;EACJ;AACJ;AAEA,+DAAeT,UAAU;;;;;;UCjCzB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACN6C;AAE7C,MAAMe,UAAU,GAAG,IAAIf,2DAAU,EAAE,C","sources":["webpack://mccraryauto/./src/modules/MobileMenu.js","webpack://mccraryauto/webpack/bootstrap","webpack://mccraryauto/webpack/runtime/make namespace object","webpack://mccraryauto/./src/index.js"],"sourcesContent":["class MobileMenu {\r\n// 1. describe and create/initiate object\r\n    constructor() {\r\n        this.toggleButton = document.querySelector('.site-header__menu-trigger');\r\n        this.menuOverlay = document.querySelector('.menu-overlay');\r\n        this.events();\r\n        this.isOverlayOpen = false;\r\n        console.log(this.toggleButton.classList);\r\n    }\r\n// 2. events\r\n    events(){\r\n        this.toggleButton.addEventListener('click', () => this.toggleOverlay());\r\n        console.log(\"events working\");\r\n    }\r\n\r\n// 3. methods (functions, actions...)\r\n    toggleOverlay(){\r\n        if (this.isOverlayOpen) {\r\n            this.menuOverlay.classList.remove(\"site-header__menu--active\");\r\n            document.querySelector('body').classList.remove(\"body-no-scroll\");\r\n            this.toggleButton.classList.remove('rotated-menu-icon');\r\n            this.isOverlayOpen = false;\r\n            console.log(\"closing\");\r\n        } else {\r\n            this.menuOverlay.classList.add(\"site-header__menu--active\");\r\n            document.querySelector('body').classList.add(\"body-no-scroll\");\r\n            this.toggleButton.classList.add('rotated-menu-icon');\r\n            this.isOverlayOpen = true;\r\n            console.log(\"opening\");\r\n        }\r\n    }\r\n}\r\n\r\nexport default MobileMenu;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import MobileMenu from './modules/MobileMenu'\r\n\r\nconst mobileMenu = new MobileMenu()"],"names":["MobileMenu","constructor","toggleButton","document","querySelector","menuOverlay","events","isOverlayOpen","console","log","classList","addEventListener","toggleOverlay","remove","add","mobileMenu"],"sourceRoot":""}